REACT_APP_FMP_API_KEY=f04ddc95561236e9dccd1ffa355ad55b
REACT_APP_BASEURL=https://localhost:3000
React_APP_BASEURLPARTIAL=https://getlive.club/api
# React_APP_BASEURLPARTIAL=http://wajahat001-001-site1.atempurl.com/api


# string username = "johndoe";
# string password = "password123";

# // Retrieve the user's stored hash and salt from the database
# byte[] storedHash, storedSalt;
# using (var connection = new SqlConnection("your connection string here"))
# {
#     connection.Open();
#     var command = new SqlCommand("SELECT PasswordHash, Salt FROM Users WHERE Username = @Username", connection);
#     command.Parameters.AddWithValue("@Username", username);
#     using (var reader = command.ExecuteReader())
#     {
#         if (reader.Read())
#         {
#             storedHash = Convert.FromBase64String(reader.GetString(0));
#             storedSalt = Convert.FromBase64String(reader.GetString(1));
#         }
#         else
#         {
#             // User not found
#             return false;
#         }
#     }
# }

# // Compute the hash of the user's input with the stored salt
# string saltedPassword = Convert.ToBase64String(storedSalt) + password;
# byte[] passwordBytes = Encoding.UTF8.GetBytes(saltedPassword);
# byte[] hashedPassword = new SHA256Managed().ComputeHash(passwordBytes);

# // Compare the computed hash to the stored hash
# if (hashedPassword.SequenceEqual(storedHash))
# {
#     // Passwords match
#     return true;
# }
# else
# {
#     // Passwords do not match
#     return false;
# }


# ============================
# byte[] salt = new byte[16];
# new RNGCryptoServiceProvider().GetBytes(salt);

# // Hash the user's password with the salt
# string password = "password123";
# string saltedPassword = Convert.ToBase64String(salt) + password;
# byte[] passwordBytes = Encoding.UTF8.GetBytes(saltedPassword);
# byte[] hashedPassword = new SHA256Managed().ComputeHash(passwordBytes);

# // Store the hashed password and salt in the database
# using (var connection = new SqlConnection("your connection string here"))
# {
#     connection.Open();
#     var command = new SqlCommand("INSERT INTO Users (Username, PasswordHash, Salt) VALUES (@Username, @PasswordHash, @Salt)", connection);
#     command.Parameters.AddWithValue("@Username", "johndoe");
#     command.Parameters.AddWithValue("@PasswordHash", Convert.ToBase64String(hashedPassword));
#     command.Parameters.AddWithValue("@Salt", Convert.ToBase64String(salt));
#     command.ExecuteNonQuery();
# }